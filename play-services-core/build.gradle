/*
 * SPDX-FileCopyrightText: 2013 microG Project Team
 * SPDX-License-Identifier: Apache-2.0
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

dependencies {
    implementation "com.squareup.wire:wire-runtime:$wireVersion"
    implementation "de.hdodenhof:circleimageview:1.3.0"
    // TODO: Switch to upstream once raw requests are merged
    // https://github.com/vitalidze/chromecast-java-api-v2/pull/99
    // implementation "su.litvak.chromecast:api-v2:0.10.4"
    implementation "info.armills.chromecast-java-api-v2:api-v2-raw-request:0.10.4-raw-request-1"

    // Specified manually due to
    // https://github.com/vitalidze/chromecast-java-api-v2/issues/91
    api "org.slf4j:slf4j-api:1.7.25"
    api "uk.uuid.slf4j:slf4j-android:1.7.25-1"

    implementation project(':firebase-dynamic-links-api')
    implementation project(':firebase-auth-core')
    implementation project(':play-services-base-core')
    implementation project(':play-services-base-core-ui')
    implementation project(':play-services-conscrypt-provider-core')
    implementation project(':play-services-cronet-core')
    implementation project(':play-services-droidguard-core')
    implementation project(':play-services-droidguard-core-ui')
    implementation project(':play-services-fido-core')
    implementation project(':play-services-gmscompliance-core')
    implementation project(':play-services-location-core')
    implementation project(':play-services-safetynet-core')
    implementation project(':play-services-oss-licenses-core')
    implementation project(':play-services-safetynet-core-ui')
    implementation project(':play-services-tapandpay-core')
    implementation project(':play-services-vision-core')

    implementation project(':play-services-core-proto')
    implementation project(':play-services-core:microg-ui-tools') // deprecated
    implementation project(':play-services-api')
    implementation project(':play-services-cast-api')
    implementation project(':play-services-wearable')
    implementation "org.microg:wearable:$wearableVersion"

    runtimeOnly "org.microg.nlp:geocode-v1:$nlpVersion"
    runtimeOnly "org.microg.nlp:location-v2:$nlpVersion"
    runtimeOnly "org.microg.nlp:location-v3:$nlpVersion"
    implementation "org.microg.nlp:ui:$nlpVersion"

    // AndroidX UI
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.mediarouter:mediarouter:$mediarouterVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.webkit:webkit:$webkitVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation "com.android.volley:volley:$volleyVersion"

    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

android {
    compileSdkVersion androidCompileSdk
    buildToolsVersion "$androidBuildVersionTools"
    namespace "$applicationNamespace"

    defaultConfig {
        applicationId "${basePackageName}.android.gms"

        versionName version
        versionCode appVersionCode

        minSdkVersion androidMinSdk
        targetSdkVersion androidTargetSdk

        multiDexEnabled true
        multiDexKeepProguard file('multidex-keep.pro')

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        buildConfigField "String", "APPLICATION_NAMESPACE", "\"$applicationNamespace\""
        buildConfigField "String", "BASE_PACKAGE_NAME", "\"$basePackageName\""
        manifestPlaceholders = [
                basePackageName: "$basePackageName"
        ]

        // provide package name to xml resources
        resValue "string", "var_authenticator_account_type", "$basePackageName"
        resValue "string", "var_contact_syncadapter_account_type", "$basePackageName"
        resValue "string", "var_pref_auth_action_security_settings", "${basePackageName}.android.gms.accountsettings.SECURITY_SETTINGS"
        resValue "string", "var_pref_auth_action_privacy_settings", "${basePackageName}.android.gms.accountsettings.PRIVACY_SETTINGS"
        resValue "string", "var_pref_auth_action_preferences_settings", "${basePackageName}.android.gms.accountsettings.ACCOUNT_PREFERENCES_SETTINGS"
        resValue "string", "var_pref_start_gms_package", "${basePackageName}.android.gms"
    }

    buildFeatures {
        dataBinding = true
    }

    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
        }
    }

    lintOptions {
        disable 'MissingTranslation', 'InvalidPackage', 'BatteryLife', 'ImpliedQuantity', 'MissingQuantity', 'InvalidWakeLockTag'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        jniLibs {
            useLegacyPackaging false
        }
    }
}

if (file('user.gradle').exists()) {
    apply from: 'user.gradle'
}
